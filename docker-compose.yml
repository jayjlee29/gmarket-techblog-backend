version: '3.9'
services:
  cleanBuilder:
    image: azul/zulu-openjdk:11
    volumes:
      - .:/opt/build
      - type: volume
        source: app_home
        target: /opt/app
        volume:
          nocopy: true
      - type: volume
        source: gradle_home
        target: /opt/.gradle:rw
    working_dir: /opt/build
    command: "/opt/build/gradlew cleanDeps copyDeps --gradle-user-home=/opt/.gradle -x test"
  builder:
    image: azul/zulu-openjdk:11
    volumes:
      - .:/opt/build
      - type: volume
        source: app_home
        target: /opt/app
        volume:
          nocopy: true
      - type: volume
        source: gradle_home
        target: /opt/.gradle:rw
    working_dir: /opt/build
    command: "/opt/build/gradlew copyDeps --gradle-user-home=/opt/.gradle -x test"
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 5005:5005
      - 5006:5006
  redis:
    image: redis:6.2.6
  subscriber:
    build:
      context: subscriber
      dockerfile: Dockerfile
    volumes:
      - app_home:/opt/app
    depends_on:
      nginx:
        condition: service_started
#      builder:
#        condition: service_completed_successfully
      redis:
        condition: service_started
    restart: always
  api:
    build:
      context: api
      dockerfile: Dockerfile
    volumes:
      - app_home:/opt/app
    depends_on:
      nginx:
        condition: service_started
#      builder:
#        condition: service_completed_successfully
      redis:
        condition: service_started
    restart: always
  websocket:
    build:
      context: websocket
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    volumes:
      - app_home:/opt/app
    depends_on:
      nginx:
        condition: service_started
      #      builder:
      #        condition: service_completed_successfully
      redis:
        condition: service_started
    restart: always
volumes:
  gradle_home:
  app_home:
